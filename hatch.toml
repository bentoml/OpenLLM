[envs.default]
dependencies = [
    # NOTE: To run all hooks
    "pre-commit",
    # NOTE: towncrier for changelog
    "towncrier",
    # NOTE: Using under ./tools/update-optional-dependencies.py
    "tomlkit",
    # NOTE: Using under ./tools/update-readme.py
    "markdown-it-py",
    # NOTE: Tests strategies with Hypothesis and pytest, and snapshot testing with syrupy
    "coverage[toml]>=6.5",
    "filelock>=3.7.1",
    "pytest",
    "pytest-cov",
    "pytest-mock",
    "pytest-randomly",
    "pytest-rerunfailures",
    "pytest-asyncio>=0.21.0",
    "pytest-xdist[psutil]",
    "trustme",
    "hypothesis",
    "syrupy",
]
features = ['flan-t5']
[envs.default.scripts]
changelog = "towncrier build --version main --draft"
quality = [
    "./tools/dependencies.py",
    "./tools/update-readme.py",
    "./tools/update-config-stubs.py",
    "./tools/update-models-import.py",
    "- ./tools/add-license-headers .",
    "pre-commit run --all-files",
]
setup = "pre-commit install"
typing = "pre-commit run typecheck --all-files"
[envs.tests]
extra-dependencies = [
    # NOTE: interact with docker for container tests.
    "docker",
]
[envs.tests.scripts]
_run_script = "pytest --cov --cov-report={env:COVERAGE_REPORT:term-missing} --cov-config=pyproject.toml"
distributed = "_run_script --reruns 5 --reruns-delay 3 --ignore tests/models -n 3 -r aR {args:tests}"
models = "_run_script -r aR {args:tests/models}"
python = "_run_script --reruns 5 --reruns-delay 3 --ignore tests/models -r aR {args:tests}"
[envs.tests.overrides]
env.GITHUB_ACTIONS.env-vars = "COVERAGE_REPORT="
[envs.coverage]
dependencies = ["coverage[toml]>=6.5", "lxml", "orjson"]
detached = true
[envs.coverage.scripts]
combine = "coverage combine {args}"
generate-summary = "python tools/generate-coverage.py"
report-uncovered-html = "coverage html --skip-covered --skip-empty"
report-xml = "coverage xml"
write-summary-report = "python tools/write-coverage-report.py"
