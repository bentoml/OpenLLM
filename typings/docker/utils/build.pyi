"""This type stub file was generated by pyright."""

_SEP = ...

def tar(path, exclude=..., dockerfile=..., fileobj=..., gzip=...): ...
def exclude_paths(root, patterns, dockerfile=...):  # -> set[Unknown]:
    """Given a root directory path and a list of .dockerignore patterns, return
    an iterator of all paths (both regular files and directories) in the root
    directory that do *not* match any of the patterns.

    All paths returned are relative to the root.
    """
    ...

def build_file_list(root): ...
def create_archive(root, files=..., fileobj=..., gzip=..., extra_files=...): ...
def mkbuildcontext(dockerfile): ...
def split_path(p): ...
def normalize_slashes(p): ...
def walk(root, patterns, default=...): ...

class PatternMatcher:
    def __init__(self, patterns) -> None: ...
    def matches(self, filepath): ...
    def walk(self, root): ...

class Pattern:
    def __init__(self, pattern_str) -> None: ...
    @classmethod
    def normalize(cls, p): ...
    def match(self, filepath): ...
