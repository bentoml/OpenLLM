# This file is generated by tools/update-dummy.py. DO NOT EDIT MANUALLY!
# To update this, run ./tools/update-dummy.py
from __future__ import annotations
import typing as _t
from openllm_core.utils import DummyMetaclass as _DummyMetaclass, require_backends as _require_backends
class VLLMBaichuan(metaclass=_DummyMetaclass):
  _backends=["vllm","cpm_kernels","sentencepiece"]
  def __init__(self,*param_decls:_t.Any,**attrs: _t.Any):_require_backends(self,["vllm","cpm_kernels","sentencepiece"])
class VLLMDollyV2(metaclass=_DummyMetaclass):
  _backends=["vllm"]
  def __init__(self,*param_decls:_t.Any,**attrs: _t.Any):_require_backends(self,["vllm"])
class VLLMFalcon(metaclass=_DummyMetaclass):
  _backends=["vllm","einops","xformers"]
  def __init__(self,*param_decls:_t.Any,**attrs: _t.Any):_require_backends(self,["vllm","einops","xformers"])
class VLLMGPTNeoX(metaclass=_DummyMetaclass):
  _backends=["vllm"]
  def __init__(self,*param_decls:_t.Any,**attrs: _t.Any):_require_backends(self,["vllm"])
class VLLMMPT(metaclass=_DummyMetaclass):
  _backends=["vllm","triton","einops"]
  def __init__(self,*param_decls:_t.Any,**attrs: _t.Any):_require_backends(self,["vllm","triton","einops"])
class VLLMOPT(metaclass=_DummyMetaclass):
  _backends=["vllm"]
  def __init__(self,*param_decls:_t.Any,**attrs: _t.Any):_require_backends(self,["vllm"])
class VLLMStableLM(metaclass=_DummyMetaclass):
  _backends=["vllm"]
  def __init__(self,*param_decls:_t.Any,**attrs: _t.Any):_require_backends(self,["vllm"])
class VLLMStarCoder(metaclass=_DummyMetaclass):
  _backends=["vllm","bitsandbytes"]
  def __init__(self,*param_decls:_t.Any,**attrs: _t.Any):_require_backends(self,["vllm","bitsandbytes"])
class VLLMLlama(metaclass=_DummyMetaclass):
  _backends=["vllm","fairscale","sentencepiece","scipy"]
  def __init__(self,*param_decls:_t.Any,**attrs: _t.Any):_require_backends(self,["vllm","fairscale","sentencepiece","scipy"])
class AutoVLLM(metaclass=_DummyMetaclass):
  _backends=["vllm"]
  def __init__(self,*param_decls:_t.Any,**attrs: _t.Any):_require_backends(self,["vllm"])
MODEL_VLLM_MAPPING_NAMES:_t.Any=None
__all__:list[str]=["MODEL_VLLM_MAPPING_NAMES","AutoVLLM","VLLMBaichuan","VLLMDollyV2","VLLMFalcon","VLLMGPTNeoX","VLLMMPT","VLLMOPT","VLLMStableLM","VLLMStarCoder","VLLMLlama"]
